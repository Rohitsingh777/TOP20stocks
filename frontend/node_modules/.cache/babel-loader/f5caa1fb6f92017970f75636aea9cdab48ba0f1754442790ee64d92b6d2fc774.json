{"ast":null,"code":"var _jsxFileName = \"/Users/rohitsingh/Desktop/JOBS/Essentially AI/frontend/src/input.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  setValue,\n  value\n}) => {\n  const handleChange = e => {\n    let inputValue = e.target.value;\n    // Remove non-numeric characters\n    inputValue = inputValue.replace(/[^0-9]/g, '');\n\n    // Ensure the value is within the range of 1 to 20\n    if (inputValue !== '' && parseInt(inputValue) >= 1 && parseInt(inputValue) <= 20) {\n      //setValue(inputValue);\n    } else {\n      // Clear the input if the value is not within the range\n      setValue('');\n    }\n  };\n  function handleclick() {\n    setValue(inputValue);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numberInput\",\n      children: \"Enter a number (1-20): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"numberInput\",\n      value: value,\n      onChange: handleChange,\n      placeholder: \"1-20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Input","setValue","value","handleChange","e","inputValue","target","replace","parseInt","handleclick","_jsxDEV","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/rohitsingh/Desktop/JOBS/Essentially AI/frontend/src/input.jsx"],"sourcesContent":["\nconst Input = ({setValue , value }) => {\n\n  const handleChange = (e) => {\n    let inputValue = e.target.value;\n    // Remove non-numeric characters\n    inputValue = inputValue.replace(/[^0-9]/g, '');\n\n    // Ensure the value is within the range of 1 to 20\n    if (inputValue !== '' && parseInt(inputValue) >= 1 && parseInt(inputValue) <= 20) {\n      //setValue(inputValue);\n    } else {\n      // Clear the input if the value is not within the range\n      setValue('');\n    }\n  };\n\n\n  function handleclick(){\n    setValue(inputValue);\n}\n\n  return (\n    <div>\n      <label htmlFor=\"numberInput\">Enter a number (1-20): </label>\n      <input\n        type=\"text\"\n        id=\"numberInput\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"1-20\"\n      />\n      <button onClick={handleclick}></button>\n    </div>\n  );\n};\n\n\nexport default Input;\n"],"mappings":";;AACA,MAAMA,KAAK,GAAGA,CAAC;EAACC,QAAQ;EAAGC;AAAM,CAAC,KAAK;EAErC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAIC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACJ,KAAK;IAC/B;IACAG,UAAU,GAAGA,UAAU,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;;IAE9C;IACA,IAAIF,UAAU,KAAK,EAAE,IAAIG,QAAQ,CAACH,UAAU,CAAC,IAAI,CAAC,IAAIG,QAAQ,CAACH,UAAU,CAAC,IAAI,EAAE,EAAE;MAChF;IAAA,CACD,MAAM;MACL;MACAJ,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAGD,SAASQ,WAAWA,CAAA,EAAE;IACpBR,QAAQ,CAACI,UAAU,CAAC;EACxB;EAEE,oBACEK,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAOE,OAAO,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5DN,OAAA;MACEO,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,aAAa;MAChBhB,KAAK,EAAEA,KAAM;MACbiB,QAAQ,EAAEhB,YAAa;MACvBiB,WAAW,EAAC;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACFN,OAAA;MAAQW,OAAO,EAAEZ;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACM,EAAA,GAlCItB,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}