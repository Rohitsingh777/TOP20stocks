{"ast":null,"code":"var _jsxFileName = \"/Users/rohitsingh/Desktop/JOBS/Essentially AI/frontend/src/input.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  setValue,\n  value\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const handleChange = e => {\n    let inputValue = e.target.value;\n    // Remove non-numeric characters\n    inputValue = inputValue.replace(/[^0-9]/g, '');\n\n    // Ensure the value is within the range of 1 to 20\n    if (inputValue !== '' && parseInt(inputValue) >= 1 && parseInt(inputValue) <= 20) {\n      setInput(inputValue);\n    }\n    //     else {\n    //     //   // Clear the input if the value is not within the range\n    //     //   setValue('');\n    //     // }\n  };\n  function handleclick() {\n    let inputValue = input;\n    setValue(inputValue);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numberInput\",\n      children: \"Enter a number (1-20): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter text\",\n      variant: \"outlined\",\n      onChange: handleChange,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleclick,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"1O1W05jGWca0iIoJmbD6d94ud4I=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["useState","useEffect","Button","TextField","jsxDEV","_jsxDEV","Input","setValue","value","_s","input","setInput","handleChange","e","inputValue","target","replace","parseInt","handleclick","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","label","variant","onChange","style","marginBottom","onClick","_c","$RefreshReg$"],"sources":["/Users/rohitsingh/Desktop/JOBS/Essentially AI/frontend/src/input.jsx"],"sourcesContent":["import { useState ,useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\n\n\nconst Input = ({setValue , value }) => {\n    const [input , setInput ] = useState('')\n\n  const handleChange = (e) => {\n    let inputValue = e.target.value;\n    // Remove non-numeric characters\n    inputValue = inputValue.replace(/[^0-9]/g,'');\n\n    // Ensure the value is within the range of 1 to 20\n    if (inputValue !== '' && parseInt(inputValue) >= 1 && parseInt(inputValue) <= 20) {\n      setInput(inputValue);\n    }\n//     else {\n//     //   // Clear the input if the value is not within the range\n//     //   setValue('');\n//     // }\n\n };\n\n\n  function handleclick(){\n    let inputValue = input; \n    setValue(inputValue);\n}\n\n  return (\n    <div>\n      <label htmlFor=\"numberInput\">Enter a number (1-20): </label>\n      <TextField\n        label=\"Enter text\"\n        variant=\"outlined\"\n        onChange={handleChange}\n        style={{ marginBottom: '20px' }}\n      />\n      <Button variant=\"contained\" onClick={handleclick}>\n        Click\n      </Button>\n    </div>\n  );\n};\n\n\nexport default Input;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhD,MAAMC,KAAK,GAAGA,CAAC;EAACC,QAAQ;EAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAIC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACP,KAAK;IAC/B;IACAM,UAAU,GAAGA,UAAU,CAACE,OAAO,CAAC,SAAS,EAAC,EAAE,CAAC;;IAE7C;IACA,IAAIF,UAAU,KAAK,EAAE,IAAIG,QAAQ,CAACH,UAAU,CAAC,IAAI,CAAC,IAAIG,QAAQ,CAACH,UAAU,CAAC,IAAI,EAAE,EAAE;MAChFH,QAAQ,CAACG,UAAU,CAAC;IACtB;IACJ;IACA;IACA;IACA;EAEC,CAAC;EAGA,SAASI,WAAWA,CAAA,EAAE;IACpB,IAAIJ,UAAU,GAAGJ,KAAK;IACtBH,QAAQ,CAACO,UAAU,CAAC;EACxB;EAEE,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAOe,OAAO,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5DnB,OAAA,CAACF,SAAS;MACRsB,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAC,UAAU;MAClBC,QAAQ,EAAEf,YAAa;MACvBgB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFnB,OAAA,CAACH,MAAM;MAACwB,OAAO,EAAC,WAAW;MAACI,OAAO,EAAEZ,WAAY;MAAAC,QAAA,EAAC;IAElD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CAvCIH,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}